// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    Inc16(in=registerout, out=incval);
    Mux16(a=registerout, b=incval, sel=inc, out=incout);
    Mux16(a=incout, b=in, sel=load, out=loadout);
    Mux16(a=loadout, b=false, sel=reset, out=resetout);
    Register(in=resetout, load=true, out=registerout, out=out);
}

/*
  8 cases
  0 0 0 ~> incval = r + 1, incout = r,      loadout = r,      resetout = r      ~> r
  0 0 1 ~> incval = r + 1, incout = r + 1,  loadout = r + 1,  resetout = r + 1  ~> r + 1
  0 1 0 ~> incval = r + 1, incout = r,      loadout = in,     resetout = in     ~> in
  0 1 1 ~> incval = r + 1, incout = r + 1,  loadout = in,     resetout = in     ~> in
  1 0 0 ~> incval = r + 1, incout = r,      loadout = r,      resetout = 0      ~> 0
  1 0 1 ~> incval = r + 1, incout = r + 1,  loadout = r + 1,  resetout = 0      ~> 0
  1 1 0 ~> incval = r + 1, incout = r,      loadout = in,     resetout = 0      ~> 0
  1 1 1 ~> incval = r + 1, incout = r + 1,  loadout = in,     resetout = 0      ~> r
*/

